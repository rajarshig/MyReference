{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction The idea of this project is to document some of the most common & important informations about the softwares I use. Over time, the expectation is, the project will evolve into a knowledge base for teaching, learning & as a quick reference. Credits Developed & maintained by Rajarshi Ghosh Github Linkedin Issue/ Feedback If you have any feedback, feature request etc, feel free to open an issue at https://github.com/rajarshig/MyReference/issues Licence MIT License Copyright (c) 2018 Rajarshi Ghosh Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Home"},{"location":"#introduction","text":"The idea of this project is to document some of the most common & important informations about the softwares I use. Over time, the expectation is, the project will evolve into a knowledge base for teaching, learning & as a quick reference.","title":"Introduction"},{"location":"#credits","text":"Developed & maintained by Rajarshi Ghosh Github Linkedin","title":"Credits"},{"location":"#issue-feedback","text":"If you have any feedback, feature request etc, feel free to open an issue at https://github.com/rajarshig/MyReference/issues","title":"Issue/ Feedback"},{"location":"#licence","text":"MIT License Copyright (c) 2018 Rajarshi Ghosh Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Licence"},{"location":"deployment/","text":"rmdir docs /s Git Push rename docs source rename site docs echo reference.rajarshig.com > docs\\CNAME","title":"Deployment"},{"location":"deployment/#git-push","text":"rename docs source rename site docs echo reference.rajarshig.com > docs\\CNAME","title":"Git Push"},{"location":"docker/","text":"Install Install using the repository Before you install Docker CE for the first time on a new host machine, you need to set up the Docker repository. Afterward, you can install and update Docker from the repository. Set up the repository Update the apt package index: sudo apt-get update Install packages to allow apt to use a repository over HTTPS: sudo apt-get install apt-transport-https ca-certificates curl software-properties-common Add Docker\u2019s official GPG key: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - Verify that you now have the key with the fingerprint sudo apt-key fingerprint 0EBFCD88 Use the following command to set up the stable repository. sudo add-apt-repository \\ \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\ $(lsb_release -cs) \\ stable\" Install Docker CE Update the apt package index & install the latest version of Docker CE apt-get update apt-get install docker-ce Test Docker Installation Run the following command to test docker installation sudo docker run hello-world Console output for successful install Unable to find image 'hello-world:latest' locally latest: Pulling from library/hello-world 9db2ca6ccae0: Pull complete Digest: sha256:4b8ff392a12ed9ea17784bd3c9a8b1fa3299cac44aca35a85c90c5e3c7afacdc Status: Downloaded newer image for hello-world:latest Hello from Docker! This message shows that your installation appears to be working correctly. To generate this message, Docker took the following steps: 1. The Docker client contacted the Docker daemon. 2. The Docker daemon pulled the \"hello-world\" image from the Docker Hub. (amd64) 3. The Docker daemon created a new container from that image which runs the executable that produces the output you are currently reading. 4. The Docker daemon streamed that output to the Docker client, which sent it to your terminal. To try something more ambitious, you can run an Ubuntu container with: $ docker run -it ubuntu bash Share images, automate workflows, and more with a free Docker ID: https://hub.docker.com/ For more examples and ideas, visit: https://docs.docker.com/engine/userguide/","title":"Docker"},{"location":"docker/#install","text":"","title":"Install"},{"location":"docker/#install-using-the-repository","text":"Before you install Docker CE for the first time on a new host machine, you need to set up the Docker repository. Afterward, you can install and update Docker from the repository.","title":"Install using the repository"},{"location":"docker/#set-up-the-repository","text":"Update the apt package index: sudo apt-get update Install packages to allow apt to use a repository over HTTPS: sudo apt-get install apt-transport-https ca-certificates curl software-properties-common Add Docker\u2019s official GPG key: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - Verify that you now have the key with the fingerprint sudo apt-key fingerprint 0EBFCD88 Use the following command to set up the stable repository. sudo add-apt-repository \\ \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\ $(lsb_release -cs) \\ stable\"","title":"Set up the repository"},{"location":"docker/#install-docker-ce","text":"Update the apt package index & install the latest version of Docker CE apt-get update apt-get install docker-ce","title":"Install Docker CE"},{"location":"docker/#test-docker-installation","text":"Run the following command to test docker installation sudo docker run hello-world Console output for successful install Unable to find image 'hello-world:latest' locally latest: Pulling from library/hello-world 9db2ca6ccae0: Pull complete Digest: sha256:4b8ff392a12ed9ea17784bd3c9a8b1fa3299cac44aca35a85c90c5e3c7afacdc Status: Downloaded newer image for hello-world:latest Hello from Docker! This message shows that your installation appears to be working correctly. To generate this message, Docker took the following steps: 1. The Docker client contacted the Docker daemon. 2. The Docker daemon pulled the \"hello-world\" image from the Docker Hub. (amd64) 3. The Docker daemon created a new container from that image which runs the executable that produces the output you are currently reading. 4. The Docker daemon streamed that output to the Docker client, which sent it to your terminal. To try something more ambitious, you can run an Ubuntu container with: $ docker run -it ubuntu bash Share images, automate workflows, and more with a free Docker ID: https://hub.docker.com/ For more examples and ideas, visit: https://docs.docker.com/engine/userguide/","title":"Test Docker Installation"},{"location":"hive/","text":"Install In ubuntu, first install SASL sudo apt-get install libsasl2-dev Install hive related python packages pip install sasl pip install thrift pip install thrift-sasl pip install PyHive Connect with hive from pyhive import hive conn = hive.Connection(host=\"YOUR_HIVE_HOST\", port=PORT, username=\"YOU\") Direct connection cursor = conn.cursor() cursor.execute(\"SELECT cool_stuff FROM hive_table\") for result in cursor.fetchall(): use_result(result) Use with Pandas import pandas as pd df = pd.read_sql(\"SELECT cool_stuff FROM hive_table\", conn)","title":"Hive"},{"location":"hive/#install","text":"In ubuntu, first install SASL sudo apt-get install libsasl2-dev Install hive related python packages pip install sasl pip install thrift pip install thrift-sasl pip install PyHive Connect with hive from pyhive import hive conn = hive.Connection(host=\"YOUR_HIVE_HOST\", port=PORT, username=\"YOU\") Direct connection cursor = conn.cursor() cursor.execute(\"SELECT cool_stuff FROM hive_table\") for result in cursor.fetchall(): use_result(result) Use with Pandas import pandas as pd df = pd.read_sql(\"SELECT cool_stuff FROM hive_table\", conn)","title":"Install"},{"location":"index_old/","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"index_old/#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"index_old/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"index_old/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"jupyter_cheatsheet/","text":"Custom kernel in Virtualenv Install Ipython in Virtualenv Install custom kernel in Virtualenv ipython kernel install --user --name=py_work You can use the same kernel from system install jupyter / other jupyter installations","title":"Jupyter"},{"location":"jupyter_cheatsheet/#custom-kernel-in-virtualenv","text":"Install Ipython in Virtualenv Install custom kernel in Virtualenv ipython kernel install --user --name=py_work You can use the same kernel from system install jupyter / other jupyter installations","title":"Custom kernel in Virtualenv"},{"location":"linux_cheatsheet/","text":"SCP Server to local system scp username@hostip:/filepath/filename ~/ Aliases Add aliases in .bash_aliases file nano ~/.bash_aliases Add alias alias gtst=\"git status\" Activate source ~/.bash_aliases","title":"Linux"},{"location":"linux_cheatsheet/#scp","text":"Server to local system scp username@hostip:/filepath/filename ~/","title":"SCP"},{"location":"linux_cheatsheet/#aliases","text":"Add aliases in .bash_aliases file nano ~/.bash_aliases Add alias alias gtst=\"git status\" Activate source ~/.bash_aliases","title":"Aliases"},{"location":"markdown/","text":"Markdown is a lightweight markup language with plain text formatting syntax. It is designed so that it can be converted to HTML and many other formats using a tool by the same name. Source: Wikipedia References Original Markdown Specification Squarespace Markdown Cheat Sheet Online Markdown writer Markdown-here Cheat Sheet Youtube videos <a href=\"http://www.youtube.com/watch?feature=player_embedded&v=9XaS93WMRQQ \" target=\"_blank\"><img src=\"http://img.youtube.com/vi/9XaS93WMRQQ/0.jpg\" alt=\"IMAGE ALT TEXT HERE\" width=\"240\" height=\"180\" border=\"10\" /></a>","title":"Markdown"},{"location":"markdown/#references","text":"Original Markdown Specification Squarespace Markdown Cheat Sheet Online Markdown writer Markdown-here Cheat Sheet","title":"References"},{"location":"markdown/#youtube-videos","text":"<a href=\"http://www.youtube.com/watch?feature=player_embedded&v=9XaS93WMRQQ \" target=\"_blank\"><img src=\"http://img.youtube.com/vi/9XaS93WMRQQ/0.jpg\" alt=\"IMAGE ALT TEXT HERE\" width=\"240\" height=\"180\" border=\"10\" /></a>","title":"Youtube videos"},{"location":"mysql/","text":"Install In Ubuntu sudo apt-get install mysql-server mysql-client Use wIth python sudo apt-get install python3.6-dev sudo apt-get install build-essential sudo apt update gcc sudo apt-get install libssl-dev sudo apt-get install libmysqlclient-dev","title":"Mysql"},{"location":"mysql/#install","text":"In Ubuntu sudo apt-get install mysql-server mysql-client Use wIth python sudo apt-get install python3.6-dev sudo apt-get install build-essential sudo apt update gcc sudo apt-get install libssl-dev sudo apt-get install libmysqlclient-dev","title":"Install"},{"location":"python-editor/","text":"Sublime Text Sublime Text Text based editor. Can be converted in full-featured IDE using Anaconda plugin Offer unlimited trial period PyCharm PyCharm Dedicated IDE for python development. Free version is good for most cases. Visual Studio Code Visual Studio Code Easy to use text editor by Microsoft, have useful features & plugins Free version only","title":"Editor"},{"location":"python-editor/#sublime-text","text":"Sublime Text Text based editor. Can be converted in full-featured IDE using Anaconda plugin Offer unlimited trial period","title":"Sublime Text"},{"location":"python-editor/#pycharm","text":"PyCharm Dedicated IDE for python development. Free version is good for most cases.","title":"PyCharm"},{"location":"python-editor/#visual-studio-code","text":"Visual Studio Code Easy to use text editor by Microsoft, have useful features & plugins Free version only","title":"Visual Studio Code"},{"location":"python-installation/","text":"Installation Windows Install latest python windows installer from Python for Windows Run \u201ccmd\u201d to open command prompt Place following python file in current location #! python3 from datetime import datetime print(datetime.now()) print(\u201cpython in windows!\u201d) Run as \u201cpy filename.py\u201d Detailed reference for python in windows Python Windows instruction Find installed python path to setup in an IDE Right-click python app from Start menu and select \u2018open file location\u2019 Right click on \u2018Python 3.6 (64-bit)\u2019 shortcut and selection \u2018Properties\u2019, then select value of Target field Linux Python comes pre-installed in most Linux distribution. To check, open Terminal & type 'python' Ubuntu 16.04 defaults to python 3.5. To update default python to 3.6, use following steps sudo add-apt-repository ppa:jonathonf/python-3.6 sudo apt-get update sudo apt-get install python3.6 python3.6 -m venv py_works --without-pip cd py_works source bin/activate curl https://bootstrap.pypa.io/get-pip.py | python3 Now you will have both Python 3.6 and Pip 3.6 installed.","title":"Installation"},{"location":"python-installation/#installation","text":"","title":"Installation"},{"location":"python-installation/#windows","text":"Install latest python windows installer from Python for Windows Run \u201ccmd\u201d to open command prompt Place following python file in current location #! python3 from datetime import datetime print(datetime.now()) print(\u201cpython in windows!\u201d) Run as \u201cpy filename.py\u201d Detailed reference for python in windows Python Windows instruction Find installed python path to setup in an IDE Right-click python app from Start menu and select \u2018open file location\u2019 Right click on \u2018Python 3.6 (64-bit)\u2019 shortcut and selection \u2018Properties\u2019, then select value of Target field","title":"Windows"},{"location":"python-installation/#linux","text":"Python comes pre-installed in most Linux distribution. To check, open Terminal & type 'python' Ubuntu 16.04 defaults to python 3.5. To update default python to 3.6, use following steps sudo add-apt-repository ppa:jonathonf/python-3.6 sudo apt-get update sudo apt-get install python3.6 python3.6 -m venv py_works --without-pip cd py_works source bin/activate curl https://bootstrap.pypa.io/get-pip.py | python3 Now you will have both Python 3.6 and Pip 3.6 installed.","title":"Linux"},{"location":"python-virtual-environment/","text":"Virtual Environment venv Virtualenv","title":"Virtual Environment"},{"location":"python-virtual-environment/#virtual-environment","text":"","title":"Virtual Environment"},{"location":"python-virtual-environment/#venv","text":"","title":"venv"},{"location":"python-virtual-environment/#virtualenv","text":"","title":"Virtualenv"},{"location":"sqlalchemy/","text":"Documentation http://docs.sqlalchemy.org/en/latest/core/tutorial.html Imports from sqlalchemy import create_engine, Table, MetaData, text, select, func Connection String Mysql con_url = 'mysql://user:password@host/database?charset=utf8mb4' Create connection DB_CONFIG = create_engine(con_url, pool_size=20, max_overflow=0) engine = DB_CONFIG connection = engine.connect() metadata = MetaData(engine, reflect=True) Raw query Set raw sql as variable & run using text() function query_str = \"SELECT A.location_woeid, B.name, DATE_FORMAT(MIN(A.updated_at), '%d/%m/%Y %H:%i:00') AS timestamp, A.trend_id, UNIX_TIMESTAMP(MIN(A.updated_at)) AS unix_timestamp, SUM(A.stream_match_count) AS Count FROM A HAVING A.trend_id= :trend_id);\" trend_count_query = connection.execute(text(query_str), location_woeid=location_woeid, trend_id=trend_id, start_dt=start_dt) trend_count_data = trend_count_query.fetchall() Query using schema Create table metadata tablename = metadata.tables['tablename'] Select query interval_query = select([tablename]).order_by('id').limit(12) interval_data = connection.execute`(interval_query) first = interval_data.fetchone() ```` - Insert query time_entry = {'interval_time': interval_time} interval_result = connection.execute(interval_tracker.insert(), time_entry) - Update query trend_added = connection.execute(master_trends.update().where(master_trends.c.id == trend_id).values(category=new_trend_category, category_id=category_id)) ```","title":"Sqlalchemy"},{"location":"sqlalchemy/#documentation","text":"http://docs.sqlalchemy.org/en/latest/core/tutorial.html","title":"Documentation"},{"location":"sqlalchemy/#imports","text":"from sqlalchemy import create_engine, Table, MetaData, text, select, func","title":"Imports"},{"location":"sqlalchemy/#connection-string","text":"Mysql con_url = 'mysql://user:password@host/database?charset=utf8mb4'","title":"Connection String"},{"location":"sqlalchemy/#create-connection","text":"DB_CONFIG = create_engine(con_url, pool_size=20, max_overflow=0) engine = DB_CONFIG connection = engine.connect() metadata = MetaData(engine, reflect=True)","title":"Create connection"},{"location":"sqlalchemy/#raw-query","text":"Set raw sql as variable & run using text() function query_str = \"SELECT A.location_woeid, B.name, DATE_FORMAT(MIN(A.updated_at), '%d/%m/%Y %H:%i:00') AS timestamp, A.trend_id, UNIX_TIMESTAMP(MIN(A.updated_at)) AS unix_timestamp, SUM(A.stream_match_count) AS Count FROM A HAVING A.trend_id= :trend_id);\" trend_count_query = connection.execute(text(query_str), location_woeid=location_woeid, trend_id=trend_id, start_dt=start_dt) trend_count_data = trend_count_query.fetchall()","title":"Raw query"},{"location":"sqlalchemy/#query-using-schema","text":"Create table metadata tablename = metadata.tables['tablename'] Select query interval_query = select([tablename]).order_by('id').limit(12) interval_data = connection.execute`(interval_query) first = interval_data.fetchone() ```` - Insert query time_entry = {'interval_time': interval_time} interval_result = connection.execute(interval_tracker.insert(), time_entry) - Update query trend_added = connection.execute(master_trends.update().where(master_trends.c.id == trend_id).values(category=new_trend_category, category_id=category_id)) ```","title":"Query using schema"},{"location":"vscode_cheatsheet/","text":"VS Code CheatSheet References Official-Tips & Tricks Keyboard shortcuts - Linux Keyboard shortcuts - Windows","title":"VS Code"},{"location":"vscode_cheatsheet/#vs-code-cheatsheet","text":"","title":"VS Code CheatSheet"},{"location":"vscode_cheatsheet/#references","text":"Official-Tips & Tricks Keyboard shortcuts - Linux Keyboard shortcuts - Windows","title":"References"}]}